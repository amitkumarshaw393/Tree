#include <iostream>
using namespace std;

struct node{
    int data;
    node* left;
    node* right;
};

node* newNode(int data){
    node* temp = new node();
    temp->data = data;
    temp->left = NULL;
    temp->right = NULL;

    return temp;
}

node* newNod(int data){
    node* tem = new node();
    tem->data = data;
    tem->left = NULL;
    tem->right = NULL;

    return tem;
}

    bool isSameTree(node* p, node* q) {
        if(p==NULL && q==NULL)
            return 1;
        if(p==NULL || q==NULL)
            return 0;
        return ( p->data == q->data  && 
                 isSameTree( p->left, q->left ) && 
                 isSameTree( p->right, q->right )  );
    }



int main(){
	bool g;
    node * root = newNode(1);
    root->left = newNode(2);
    root->right = newNode(3);
    root->left->left = newNode(4);
    root->left->right = newNode(5);
    node * roo = newNod(1);
    roo->left = newNod(2);
    roo->right = newNod(3);
    roo->left->left = newNod(4);
    roo->left->right = newNod(5);
    
    g=isSameTree(root,roo) ;
    cout<<g;
    
    
    
    /*
                   1
                 /   \
                2     3
               / \
              4   5
        
        */
   
}
